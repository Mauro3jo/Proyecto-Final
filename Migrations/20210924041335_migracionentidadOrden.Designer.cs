// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turnos.Models;

namespace turnos.Migrations
{
    [DbContext(typeof(TurnosContext))]
    [Migration("20210924041335_migracionentidadOrden")]
    partial class migracionentidadOrden
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Turnos.Models.AnalisisFinal", b =>
                {
                    b.Property<int>("IdAnalisisFinal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaEmision")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOrdenDeTrabajo")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("IdAnalisisFinal");

                    b.HasIndex("IdOrdenDeTrabajo");

                    b.ToTable("AnalisisFinal");
                });

            modelBuilder.Entity("Turnos.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginId");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("Turnos.Models.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaIngreso")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPaciente")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdPractica")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("NumeroOrden")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("IdOrden");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdPractica");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("Turnos.Models.OrdenDeTrabajo", b =>
                {
                    b.Property<int>("IdOrdenDeTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IdOrden")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ValoresDePractica")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdOrdenDeTrabajo");

                    b.HasIndex("IdOrden");

                    b.ToTable("OrdenDeTrabajo");
                });

            modelBuilder.Entity("Turnos.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("DNI")
                        .HasMaxLength(8)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("FechaNac")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdPaciente");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Turnos.Models.Practica", b =>
                {
                    b.Property<int>("IdPractica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Codigo")
                        .HasMaxLength(8)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<string>("NombrePractica")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdPractica");

                    b.ToTable("Practica");
                });

            modelBuilder.Entity("Turnos.Models.AnalisisFinal", b =>
                {
                    b.HasOne("Turnos.Models.OrdenDeTrabajo", "OrdenDeTrabajo")
                        .WithMany("AnalisisFinal")
                        .HasForeignKey("IdOrdenDeTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenDeTrabajo");
                });

            modelBuilder.Entity("Turnos.Models.Orden", b =>
                {
                    b.HasOne("Turnos.Models.Paciente", "Paciente")
                        .WithMany("Orden")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos.Models.Practica", "Practica")
                        .WithMany("Orden")
                        .HasForeignKey("IdPractica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Practica");
                });

            modelBuilder.Entity("Turnos.Models.OrdenDeTrabajo", b =>
                {
                    b.HasOne("Turnos.Models.Orden", "Orden")
                        .WithMany("OrdenDeTrabajo")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Turnos.Models.Orden", b =>
                {
                    b.Navigation("OrdenDeTrabajo");
                });

            modelBuilder.Entity("Turnos.Models.OrdenDeTrabajo", b =>
                {
                    b.Navigation("AnalisisFinal");
                });

            modelBuilder.Entity("Turnos.Models.Paciente", b =>
                {
                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Turnos.Models.Practica", b =>
                {
                    b.Navigation("Orden");
                });
#pragma warning restore 612, 618
        }
    }
}
